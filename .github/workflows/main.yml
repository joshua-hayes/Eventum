name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install dependencies
        run: dotnet restore

      - name: Cache .NET dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Use cached .NET dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Run tests
        run: dotnet test --no-restore

  changelog:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set version
        run: echo "VERSION=0.1.0" >> $GITHUB_ENV

      - name: Generate Changelog
        id: generate_changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issues: false
          issuesWoLabels: false
          pullRequests: true
          prWoLabels: true
          author: true
          unreleased: false
          stripGeneratorNotice: true
          compareLink: false
          configureSections: "{\"bugs\":{\"prefix\":\"## Bugs:\",\"labels\":[\"bug\"]},\"features\":{\"prefix\":\"## Features:\",\"labels\":[\"feature\",\"enhancement\"]}}"
          enhancementLabel: '## Features:'
          bugsLabel: '## Bugs'
          prLabel: "## What's Changed"
          includeLabels: 'feature,enhancement,bug'
          
      - name: List Generated Changelog
        run: cat $GITHUB_WORKSPACE/CHANGELOG.md

      # - name: Debug Changelog Output
      #   run: echo "${{ steps.generate_changelog.outputs.changelog }}"

      - name: Upload Changelog Output
        uses: actions/upload-artifact@v4
        with:
          name: changelog_output
          path: $GITHUB_WORKSPACE/CHANGELOG.md


      # - name: Commit Changelog
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add CHANGELOG.md git commit -m "Update changelog for release ${{ github.ref }}"
      #     git push

  release:
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Changelog Output
        uses: actions/download-artifact@v4
        with:
          name: changelog_output
          path: $GITHUB_WORKSPACE

      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: v${{ env.VERSION }}
          tag_exists_error: false
          message: ${{ steps.generate_changelog.outputs.changelog }}

      # Print result using the env variable.
      - run: |
          echo "Tag already present: ${{ env.TAG_EXISTS }}"

      # Print result using the action output.
      - run: |
          echo "Tag already present: ${{ steps.tag_create.outputs.tag_exists }}"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Pack NuGet artifacts
        run: dotnet pack -c Release -o ./nupkg

      - name: Publish NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: NuGetPackage
          path: ./nupkg/*.nupkg
          retention-days: 90

      - name: Publish to NuGet feed
        run: |
          for package in ./nupkg/*.nupkg; do
            dotnet nuget push "$package" --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }}
          done